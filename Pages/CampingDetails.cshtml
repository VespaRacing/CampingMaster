@page "{id:long}"
@model CampingMaster.Pages.CampingDetailsModel
@using System
@using System.Globalization
@{
    ViewData["Title"] = Model.Camping.Name;
}

<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Font Awesome & Bootstrap -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .website-icon {
            font-family: 'Font Awesome 5 Free';
            font-weight: 900; /* Ensures the icon is displayed */
            margin-right: 8px; /* Adjust the spacing between the icon and text */
        }

        .container {
            max-width: 900px;
            margin: 2rem auto;
            padding: 0 1rem;
            font-family: 'Segoe UI', Tahoma, Verdana, sans-serif;
        }

        /* Style for the camping website link */
        a.website-link {
            text-decoration: none; /* Removes the underline */
            color: inherit; /* Inherits the text color from the parent element */
            font-size: inherit; /* Inherits the font size */
            font-weight: normal; /* Adjust font weight if needed */
            display: inline-flex; /* Ensures the icon and text are inline */
            align-items: center; /* Aligns the icon and text vertically */
        }

        .website-link .fas {
            margin-right: 8px; /* Adds spacing between the icon and text */
        }


        h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            color: #2e7d32;
        }

        .coords {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 1.5rem;
        }

        .carousel-item img {
            max-height: 450px;
            object-fit: cover;
            border-radius: 8px;
            cursor: pointer;
        }

        .rating {
            display: flex;
            align-items: center;
            margin: 2rem 0;
        }

            .rating span {
                font-size: 1.2rem;
                font-weight: bold;
                margin-right: 0.5rem;
            }

        .stars i {
            color: #ffd700;
            margin-right: 0.1rem;
        }

        .reviews {
            margin-bottom: 2rem;
        }

        .review {
            border-bottom: 1px solid #ddd;
            padding: 1rem 0;
        }

            .review strong {
                display: block;
                margin-bottom: 0.25rem;
                color: #005005;
            }

        .mini-map {
            margin-top: 2rem;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }

            .mini-map iframe {
                display: block;
                width: 100%;
                height: 300px;
                border: 0;
            }

        a.maps-link {
            display: inline-block;
            margin-top: 1rem;
            color: #ff6f00;
            text-decoration: none;
            font-weight: 500;
        }

            a.maps-link:hover {
                text-decoration: underline;
            }

        /* Contact Info Styles */
        .contact-info {
            margin-top: 2rem;
            padding: 1rem;
            background-color: #f9f9f9;
            border-radius: 8px;
            border: 1px solid #ddd;
        }

            .contact-info h3 {
                font-size: 1.8rem;
                color: #2e7d32;
                margin-bottom: 1rem;
            }

            .contact-info p {
                font-size: 1rem;
                color: #333;
            }

            .contact-info .fa {
                margin-right: 0.5rem;
            }
        /* --- ADD THIS NEW BUTTON STYLE --- */
        :root { /* Define CSS variables if not already globally defined */
            --primary: #2e7d32;
            --primary-dark: #005005;
            --text-light: #ffffff;
            --focus-outline: 3px solid #ff9800; /* Example focus color */
        }

        .btn-book-now {
            display: inline-flex; /* Allows icon and text alignment */
            align-items: center;
            justify-content: center;
            padding: 10px 20px; /* Adjusted padding */
            font-size: 1rem; /* Slightly larger font */
            font-weight: 600;
            color: var(--text-light);
            background-color: var(--primary); /* Using your primary green */
            border: none;
            border-radius: 25px; /* Pill shape */
            text-decoration: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-top: 1rem; /* Add some margin if needed */
            margin-bottom: 1.5rem; /* Add some margin if needed */
        }

            .btn-book-now i { /* Optional icon */
                margin-right: 8px;
                font-size: 0.9em;
            }

            .btn-book-now:hover {
                background-color: var(--primary-dark); /* Darker shade of primary */
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0,0,0,0.15);
            }

            .btn-book-now:focus {
                outline: var(--focus-outline);
                outline-offset: 2px; /* Adjust offset as needed */
            }

            .btn-book-now:active {
                transform: translateY(0px); /* Slight press down effect */
                box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            }
    </style>
</head>
<body>
    <div class="container">
        <h1>@Model.Camping.Name</h1>
        <a asp-page="/Book" asp-route-campingId="@Model.Camping.Id" class="btn-book-now focus-visible">
            <i class="fas fa-calendar-check"></i> Book Now
        </a>
        <p class="coords">
            @if (Model.Camping.Latitude != 0 || Model.Camping.Longitude != 0)
            {
                <span>Latitude: @Model.Camping.Latitude.ToString(CultureInfo.InvariantCulture), Longitude: @Model.Camping.Longitude.ToString(CultureInfo.InvariantCulture)</span>
            }
            else
            {
                <span>Location coordinates not available.</span>
            }
        </p>

        @if (Model.Camping.PhotoUrls != null && Model.Camping.PhotoUrls.Any())
        {
            <div id="campingCarousel" class="carousel slide mb-4" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @for (int i = 0; i < Model.Camping.PhotoUrls.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img src="@Model.Camping.PhotoUrls[i]" class="d-block w-100" alt="Camping Image @(i + 1)">
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#campingCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#campingCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        }
        else
        {
            <p>No photos available for this campsite.</p>
        }

        <div class="rating">
            <span>@(Model.Camping.Rating?.ToString("0.0", CultureInfo.InvariantCulture) ?? "N/A")</span>
            <div class="stars">
                @if (Model.Camping.Rating.HasValue)
                {
                    double ratingValue = Model.Camping.Rating.Value;
                    int fullStars = (int)Math.Floor(ratingValue);
                    bool hasHalfStar = (ratingValue - fullStars) >= 0.5;

                    for (int i = 0; i < fullStars; i++)
                    {
                        <i class="fas fa-star"></i>
                    }
                    if (hasHalfStar)
                    {
                        <i class="fas fa-star-half-alt"></i>
                    }
                }
                else
                {
                    <i class="far fa-star" style="color: #ccc;"></i>
                }
            </div>
        </div>

        <section class="reviews">
            <h2>Reviews</h2>
            @if (Model.Camping.Reviews != null && Model.Camping.Reviews.Any())
            {
                @foreach (var review in Model.Camping.Reviews)
                {
                    <div class="review">
                        <img src="@review.ProfilePhotoUrl"
                             alt="@review.AuthorName's profile photo" />
                        <p><strong>@review.AuthorName</strong></p>
                        <p>Rating: @review.Rating</p>
                        <p>@review.Text</p>
                    </div>
                }
            }
            else
            {
                <p>No reviews yet.</p>
            }
        </section>

        @if (!string.IsNullOrEmpty(Model.Camping.PlaceId))
        {
            <a class="maps-link"
               href="https://www.google.com/maps/place/?q=place_id:@Model.Camping.PlaceId"
               target="_blank"
               rel="noopener noreferrer">
                View on Google Maps <i class="fas fa-external-link-alt"></i>
            </a>
        }

        @if (Model.Camping.Latitude != 0 || Model.Camping.Longitude != 0)
        {
            <div id="map" style="height: 300px; width: 100%;"></div>
        }
        else if (string.IsNullOrEmpty(Model.Camping.PlaceId))
        {
            <p class="mt-3">Location data is not available to display a map for this campsite.</p>
        }

        <!-- Contact Information Section -->
        <div class="contact-info">
            <h3>Contact Information</h3>
            @if (!string.IsNullOrEmpty(Model.Camping.PhoneNumber))
            {
                <p><i class="fas fa-phone"></i> Phone: @Model.Camping.PhoneNumber</p>
            }
            @if (!string.IsNullOrEmpty(Model.Camping.Email))
            {
                <p><i class="fas fa-envelope"></i> Email: <a href="mailto:@Model.Camping.Email">@Model.Camping.Email</a></p>
            }
            
            <p><i class="fas fa-map-marker-alt"></i> Address: @Model.Camping.Address</p>
            @if (!string.IsNullOrEmpty(Model.Camping.Website))
            {
                <a href="@Model.Camping.Website" class="website-link" target="_blank">
                    <i class="fas fa-globe"></i> Open Camping Site
                </a>
            }
        </div>
    </div>

    <script>
        const mainCarouselElement = document.getElementById('campingCarousel');
        const fullscreenModalElement = document.getElementById('fullscreenCarouselModal');
        const fullscreenCarouselElement = document.getElementById('fullscreenCarousel');

        if (mainCarouselElement && fullscreenModalElement && fullscreenCarouselElement) {
            const fullscreenModal = new bootstrap.Modal(fullscreenModalElement);
            let fullscreenCarouselInstance = null;

            mainCarouselElement.querySelectorAll('.carousel-item img').forEach((img, index) => {
                img.style.cursor = 'pointer';
                img.addEventListener('click', () => {
                    if (!fullscreenCarouselInstance) {
                        fullscreenCarouselInstance = new bootstrap.Carousel(fullscreenCarouselElement, {
                            interval: false,
                            ride: false
                        });
                    }
                    fullscreenCarouselInstance.to(index);
                    fullscreenModal.show();
                });
            });

            fullscreenModalElement.addEventListener('hidden.bs.modal', function () {
                if (fullscreenCarouselInstance) {
                    fullscreenCarouselInstance.pause();
                }
            });
        } else {
            console.warn("Carousel elements not found. Fullscreen functionality disabled.");
        }
    </script>

    <script async
            defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBG5yNMgZNaN8hzAj6cWvTHM8DbeBmq-fA&callback=initMap">
    </script>

    <script type="text/javascript">
        function initMap() {
            var latitude = @Model.Camping.Latitude.ToString(CultureInfo.InvariantCulture);
            var longitude = @Model.Camping.Longitude.ToString(CultureInfo.InvariantCulture);

            var position = { lat: parseFloat(latitude), lng: parseFloat(longitude) };

            var map = new google.maps.Map(document.getElementById('map'), {
                center: position,
                zoom: 14,
                mapTypeId: 'roadmap'
            });

            new google.maps.Marker({
                position: position,
                map: map,
                title: '@Model.Camping.Name'
            });
        }
    </script>
</body>
</html>
